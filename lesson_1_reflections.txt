How did viewing a diff between two versions of a file help you see the bug that 
was introduced?

 
Through diff/cmd we get to know the various changes that we have made to the older version of the file. Hence , in case there is a typo/error then we can compare the changes and correct them later in the file.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Through different versions of our project we get to know about the kind of work we have been doing and get to know the errors so that we do not commit the same errors in the future.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Version controls like git allow us to ave the versions on our will. Depending on our judgement we can make decision when to submit a commit i.e. whenever a logical change is made. The drawback of version controls like google docs is that they save the versions automatically and often very not so useful versions of the programs are saved. Hence, to provide a better history Git is useful.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Git is extensively used for the coding purposes. People make projects that use multiple files including multiple languages. Therefore, each file is to be taken into consideration while making a commit otherwise the project would not function properly.

How can you use the commands git log and git diff to view the history of files?
we go to the directory where our local repo is there and type git log in the terminal there we see all the commits that we have made till date.
git diff shows the differenence between two versions of the file

How might using version control make you more confident to make changes that could break something?
When we are working on our project and think about making some changes to it then we can make a branch to the most recent commit so that if the code does not work then we can go to the most recent commit that we had saved and get  the working code back. 

Now that you have your workspace set up, what do you want to try using Git for?
I have recently started programming so I would use github to keep track of my different projects\.

